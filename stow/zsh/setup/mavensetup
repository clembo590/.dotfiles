alias m='mvnProcess '
alias mvnci='mvnProcess -T 4 clean install'
alias mvncint='mvnci -DUT.skip=true -DIT.skip=true'
alias mvncintt='mvnci -Dmaven.test.skip=true -DUT.skip=true -DIT.skip=true'
alias mvnSetVersion='mvnProcess org.codehaus.mojo:versions-maven-plugin:2.8.1:set -DprocessAllModules=true -DgenerateBackupPoms=false'
alias mvnSetVersionNotAll='mvnProcess org.codehaus.mojo:versions-maven-plugin:2.8.1:set -DgenerateBackupPoms=false'
alias mvnUpdateAllVersions='mvnProcess org.codehaus.mojo:versions-maven-plugin:2.8.1:update-properties -DgenerateBackupPoms=false; mvnProcess org.codehaus.mojo:versions-maven-plugin:2.8.1:use-latest-versions -DgenerateBackupPoms=false'
alias mvnUpdateExampleVersions='mvnProcess org.codehaus.mojo:versions-maven-plugin:2.8.1:update-properties -DallowSnapshots=true -DgenerateBackupPoms=false -DprocessParent=true -DexcludeReactor=false -Dincludes=com.example\*:\*; mvnProcess org.codehaus.mojo:versions-maven-plugin:2.8.1:use-latest-versions -DallowSnapshots=true -DgenerateBackupPoms=false -DprocessParent=true -DexcludeReactor=false -Dincludes=com.example\*:\*'
alias mvnListTasks="mvnProcess fr.jcgay.maven.plugins:buildplan-maven-plugin:list"
alias mvnListProjects="mvnProcess -q exec:exec -Dexec.executable='pwd'"
alias mvnListProjects2="mvn help:describe -Dcmd=help:describe"
alias mvnSetVersionToRelease="mvnSetVersion -DremoveSnapshot -DgenerateBackupPoms=false"
alias mvnSetVersionToSnapshot="mvnSetVersion -DnextSnapshot=true -DgenerateBackupPoms=false"
alias mvnSortPom="mvnProcess com.github.ekryd.sortpom:sortpom-maven-plugin:3.0.0:sort -Dsort.createBackupFile=false"
alias mvnPomDebug="mvn help:effective-pom -Dverbose"
alias nt="echo -Dmaven.test.skip=true -DUT.skip=true -DIT.skip=true"
alias omp='echo -pl $(listOfModifiedProjects $modificationProvider)'

mvnDebugTest(){
       mvn -Dtest=$1 -Dmaven.surefire.debug='-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=localhost:5008' test  
}


mvnChangedModules(){
 allmoduleschanged=$(git status | grep -E "modified:|deleted:|added:" | awk '{print $2}' | cut -f1 -d"/")
 echo "Changed modules are : `echo $allmoduleschanged`"

    [ -z "$1" ] && echo "Expected command : mvn_changed_modules (install/build/clean or any maven command)" && return 0

                if [  -z "$allmoduleschanged" ];
                then
                        echo "No changes (modified / deleted / added)  found"
                else
                        echo "Changed modules are : `echo $allmoduleschanged`"
                        mvnProcess $1 -amd -pl $allmoduleschanged
                fi
}

mvnDiffOnly(){
  allmoduleschanged=$(listOfModifiedProjects $modificationProvider);
  echo ONLY THESE PROJECTS WILL BE BUILD $allmoduleschanged
  if [ -z "$allmoduleschanged" ]
  then
    echo nothing to do: nothing has been modified
  else
    mvnProcess -pl $allmoduleschanged $@
  fi
}

myMvnWithProfiles(){
  mvnProcess org.apache.maven.plugins:maven-help-plugin:3.2.0:active-profiles $@
}

export mvnType="normal";

mvnProcess(){
  if [[ "$mvnType" == "normal" ]]; then
    mvn $@ ;
  elif [[ "$mvnType" == "docker" ]]; then
    mvnDocker $@ ;
  elif [[ "$mvnType" == "daemon" ]]; then
    mvnd $@ ;
  else
    return 1;
  fi
}


function DisplayHelpForMvn()
{
   echo "this function can be called with the following options"
   echo
   echo "Syntax: switchMvn [-a|n|o|h]"
   echo "options:"
   echo "a     daemon"
   echo "n     normal"
   echo "o     docker"
   echo "h     Print this Help."
   echo
}


function switchMvn(){
  while getopts ":anohr:" option; do
    case $option in
        h) # display Help
          DisplayHelpForMvn;
          return 0;;
        a) # daemon
          mvnType="daemon";
          echo $mvnType;
          ;;
        n) # normal
          mvnType="normal";
          echo $mvnType;
          ;;
        o) # docker
          mvnType="docker";
          echo $mvnType;
          ;;
        \?) # Invalid option
            echo "Error: Invalid option"
            return 1;;
    esac
  done
}


mvnDocker(){
docker run \
        --network host \
            -v $(pwd):/app \
            -w /app \
            -v ~/.m2:/var/maven/.m2 \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -e MAVEN_CONFIG=/var/maven/.m2 \
            -e ryuk.container.privileged=true \
            -e TESTCONTAINERS_RYUK_DISABLED=true \
        --rm  \
        maven:3.8.1-openjdk-16 mvn -Duser.home=/var/maven $@
}
