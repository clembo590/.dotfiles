alias awssandbox='
export AWS_PROFILE=sandbox;
aws sso login;
aws sts get-caller-identity --query Arn | xargs echo ;
aws eks update-kubeconfig --name sb-eks;
kubectl config use-context arn:aws:eks:eu-west-1:601902843606:cluster/ab-eks
'


alias awsdev='
export AWS_PROFILE=dev;
aws sso login;
aws sts get-caller-identity --query Arn | xargs echo ;
aws eks update-kubeconfig --name dev-eks;
kubectl config use-context arn:aws:eks:eu-west-1:021491256793:cluster/dev-eks
'

alias awssit='
export AWS_PROFILE=dp-integration-sit;
aws sso login;
aws sts get-caller-identity --query Arn | xargs echo ;
aws eks update-kubeconfig --name sit-eks;
kubectl config use-context arn:aws:eks:eu-west-1:758083315252:cluster/sit-eks
'

alias awsuat='
export AWS_PROFILE=dp-uat-test;
aws sso login;
aws sts get-caller-identity --query Arn | xargs echo ;
aws eks update-kubeconfig --name uat-eks;
kubectl config use-context arn:aws:eks:eu-west-1:314837910845:cluster/uat-eks
'

alias awsprod='
export AWS_PROFILE=prod;
aws sso login;
aws sts get-caller-identity --query Arn | xargs echo ;
aws eks update-kubeconfig --name prod-eks;
kubectl config use-context arn:aws:eks:eu-west-1:300947127255:cluster/prod-eks
'

alias ecrlogin='aws ecr get-login-password --region eu-west-1 --profile dev | docker login -u AWS --password-stdin https://364737385840.dkr.ecr.eu-west-1.amazonaws.com'

function dnbBuild(){
    updateNexusIpAdress

    # Save the current directory
    original_dir=$(pwd)

    # Define a cleanup function
    cleanup() {
        cd "$original_dir"
    }

    # Set up a trap to call the cleanup function on script exit
    trap cleanup EXIT

    # Change to the desired directory
    cd infra/docker
    make build
    cd "$original_dir"
    ./gradlew --console=plain dockerBuild


}

function updateNexusIpAdress(){

    # Perform nslookup to get the IP address
    ip_address=$(nslookup nexus.tech.dnb.no | awk '/^Address: / { print $2 }')

    # Check if the IP address is obtained successfully
    if [ -n "$ip_address" ]; then
        echo "Updating /etc/hosts with IP address: $ip_address"

        # Remove existing entry if it exists
        sudo sed -i -e "/nexus\.tech\.dnb\.no/d" /etc/hosts

        # Append the new entry to /etc/hosts
        echo "$ip_address nexus.tech.dnb.no" | sudo tee -a /etc/hosts > /dev/null

        echo "Entry updated successfully!"
    else
        echo "Failed to obtain IP address. Check your network connectivity."
        exit 0
    fi
}




alias dnbe2e='MODULE=end-to-end-tests NAMESPACE=casex SCENARIO=single ENVIRONMENT=dev make job-run'